var search_data = {"index":{"searchIndex":["admin","bookscontroller","reviewscontroller","shelvescontroller","userscontroller","applicationcontroller","applicationrecord","authenticationcontroller","book","bookscontroller","consultbookscontroller","homecontroller","review","reviewscontroller","shelf","user","userscontroller","authentication()","authorize_user()","consult_users()","create()","create()","create()","create()","create()","destroy()","destroy()","destroy()","destroy()","destroy()","edit()","edit()","edit()","edit()","edit()","index()","index()","index()","index()","index()","index()","index()","index()","login()","logout()","new()","new()","new()","new()","new()","new_user()","no_access()","register()","show()","show()","show()","show()","show()","update()","update()","update()","update()","update()","readme"],"longSearchIndex":["admin","admin::bookscontroller","admin::reviewscontroller","admin::shelvescontroller","admin::userscontroller","applicationcontroller","applicationrecord","authenticationcontroller","book","bookscontroller","consultbookscontroller","homecontroller","review","reviewscontroller","shelf","user","userscontroller","authenticationcontroller#authentication()","applicationcontroller#authorize_user()","userscontroller#consult_users()","admin::bookscontroller#create()","admin::reviewscontroller#create()","admin::userscontroller#create()","bookscontroller#create()","reviewscontroller#create()","admin::bookscontroller#destroy()","admin::reviewscontroller#destroy()","admin::userscontroller#destroy()","bookscontroller#destroy()","reviewscontroller#destroy()","admin::bookscontroller#edit()","admin::reviewscontroller#edit()","admin::userscontroller#edit()","bookscontroller#edit()","reviewscontroller#edit()","admin::bookscontroller#index()","admin::reviewscontroller#index()","admin::userscontroller#index()","bookscontroller#index()","consultbookscontroller#index()","homecontroller#index()","reviewscontroller#index()","userscontroller#index()","authenticationcontroller#login()","authenticationcontroller#logout()","admin::bookscontroller#new()","admin::reviewscontroller#new()","admin::userscontroller#new()","bookscontroller#new()","reviewscontroller#new()","authenticationcontroller#new_user()","authenticationcontroller#no_access()","authenticationcontroller#register()","admin::bookscontroller#show()","admin::reviewscontroller#show()","admin::userscontroller#show()","bookscontroller#show()","reviewscontroller#show()","admin::bookscontroller#update()","admin::reviewscontroller#update()","admin::userscontroller#update()","bookscontroller#update()","reviewscontroller#update()",""],"info":[["Admin","","Admin.html","",""],["Admin::BooksController","","Admin/BooksController.html","","<p>Classe responsável pelas regras de negócio relacionadas à entidade livro.\nAgrupa funcinoalidades que …\n"],["Admin::ReviewsController","","Admin/ReviewsController.html","","<p>Classe responsável pelas regras de negócio relacionadas à entidade resenha.\nAgrupa funcinoalidades que …\n"],["Admin::ShelvesController","","Admin/ShelvesController.html","","<p>Classe responsável pelas regras de negócio relacionadas à entidade\nprateleira. Agrupa funcinoalidades …\n"],["Admin::UsersController","","Admin/UsersController.html","","<p>Classe responsável pelas regras de negócio relacionadas à entidade usuário.\nAgrupa funcinoalidades que …\n"],["ApplicationController","","ApplicationController.html","","<p>Classe responsável pelas regras de negócio relacionadas à todas as demais\ntelas do sistema. Aqui são …\n"],["ApplicationRecord","","ApplicationRecord.html","",""],["AuthenticationController","","AuthenticationController.html","","<p>Classe responsável pelas regras de negócio relacionadas ao login, logout,\nautenticação e funcionalidades …\n"],["Book","","Book.html","","<p>Classe que representa os exemplares de livros que os usuários podem\narmazenar em suas estantes.\n"],["BooksController","","BooksController.html","","<p>Classe responsável pelas regras de negócio relacionadas à entidade livro.\nAgrupa funcinoalidades que …\n"],["ConsultBooksController","","ConsultBooksController.html","","<p>Classe responsável pela consultra de livros baseado no filtro disponível\npara o usuário.\n"],["HomeController","","HomeController.html","","<p>Classe responsável por mostrar a home page.\n"],["Review","","Review.html","","<p>Classe que representa as resenhas que os usuários do sistema podem fazer a\nrespeito de livros selecionados. …\n"],["ReviewsController","","ReviewsController.html","","<p>Classe responsável pelas regras de negócio relacionadas à resenha de algum\ndos livros do usuário logado. …\n"],["Shelf","","Shelf.html","","<p>Classe que representa as estantes que armazenam até 10 exemplares de\nlivros. Cada usuário possui apenas …\n"],["User","","User.html","","<p>Classe que representa os usuários do sistema. Um usuário pode ter duas\npermissões no sistema. A permissão …\n"],["UsersController","","UsersController.html","","<p>Classe responsável pelas regras de negócio relacionadas ao usuário logado\n"],["authentication","AuthenticationController","AuthenticationController.html#method-i-authentication","()","<p>Redireciona para a tela de autenticação\n"],["authorize_user","ApplicationController","ApplicationController.html#method-i-authorize_user","()","<p>Verifica se o usuário que está tentando acessar qualquer página do sistema\nestá autenticado. Caso esteja …\n"],["consult_users","UsersController","UsersController.html#method-i-consult_users","()","<p>Recupera usuário cujo apelido é igual ao apelido passado como parâmetro\n"],["create","Admin::BooksController","Admin/BooksController.html#method-i-create","()","<p>Cria um livro baseado nos parâmetros recebidos e adiciona esse livro no\nbanco de dados. Caso algum erro …\n"],["create","Admin::ReviewsController","Admin/ReviewsController.html#method-i-create","()","<p>Cria uma resenha baseada nos parâmetros recebidos e adiciona essa resenha\nno banco de dados. Caso algum …\n"],["create","Admin::UsersController","Admin/UsersController.html#method-i-create","()","<p>Cria um usuário baseado nos parâmetros recebidos e adiciona esse usuário no\nbanco de dados. Caso algum …\n"],["create","BooksController","BooksController.html#method-i-create","()","<p>Cria um livro baseado nos parâmetros recebidos e adiciona esse livro na\nestante do usuário logado. Caso …\n"],["create","ReviewsController","ReviewsController.html#method-i-create","()","<p>Cria uma resenha baseada nos parâmetros recebidos e adiciona essa resenha\nno banco de dados. Caso algum …\n"],["destroy","Admin::BooksController","Admin/BooksController.html#method-i-destroy","()","<p>Deleta um livro específico do banco de dados e retorna uma mensagem de\nsucesso ou erro na operação de …\n"],["destroy","Admin::ReviewsController","Admin/ReviewsController.html#method-i-destroy","()","<p>Deleta uma resenha específica do banco de dados e retorna uma mensagem de\nsucesso ou erro na operação …\n"],["destroy","Admin::UsersController","Admin/UsersController.html#method-i-destroy","()","<p>Deleta um usuário específico do banco de dados e retorna uma mensagem de\nsucesso ou erro na operação …\n"],["destroy","BooksController","BooksController.html#method-i-destroy","()","<p>Deleta um livro específico da estante do usuário logado e retorna uma\nmensagem de sucesso ou erro na …\n"],["destroy","ReviewsController","ReviewsController.html#method-i-destroy","()","<p>Deleta uma resenha específica do usuário logado e retorna uma mensagem de\nsucesso ou erro na operação …\n"],["edit","Admin::BooksController","Admin/BooksController.html#method-i-edit","()","<p>Recupera um livro específico passa para a tela de editar livro recuperado\n"],["edit","Admin::ReviewsController","Admin/ReviewsController.html#method-i-edit","()","<p>Recupeara uma resenha específico passa para a tela de editar resenha\nrecuperado\n"],["edit","Admin::UsersController","Admin/UsersController.html#method-i-edit","()","<p>Recupear um usuário específico e passa para a tela de editar usuário\nrecuperado\n"],["edit","BooksController","BooksController.html#method-i-edit","()","<p>Recupeara um livro específico da estante do usuário logado e passa para a\ntela de editar livro recuperado …\n"],["edit","ReviewsController","ReviewsController.html#method-i-edit","()","<p>Recupeara uma resenha específica do usuário logado e passa para a tela de\neditar resenha recuperada\n"],["index","Admin::BooksController","Admin/BooksController.html#method-i-index","()","<p>Recupera todos os livros cadastrados no sistema e passa esses livros para a\ntela de listagem livros\n"],["index","Admin::ReviewsController","Admin/ReviewsController.html#method-i-index","()","<p>Recupera todos as resenhas cadastrados no sistema e passa essas resenhas\npara a tela de listagem resenhas …\n"],["index","Admin::UsersController","Admin/UsersController.html#method-i-index","()","<p>Recupera todos os usuários cadastrados no sistema e passa esses usuários\npara a tela de listagem de usuários …\n"],["index","BooksController","BooksController.html#method-i-index","()","<p>Recupera os livros do usuário logado e passa os livros recuperados para a\ntela de listagem dos livros …\n"],["index","ConsultBooksController","ConsultBooksController.html#method-i-index","()",""],["index","HomeController","HomeController.html#method-i-index","()","<p>Apresenta a home page caso o usuário esteja logado\n"],["index","ReviewsController","ReviewsController.html#method-i-index","()","<p>Recupera as resenhas do usuário logado e passa as resenhas recuperadas para\na tela de listagem das resenhas …\n"],["index","UsersController","UsersController.html#method-i-index","()","<p>Redireciona para a tela do usuário logado\n"],["login","AuthenticationController","AuthenticationController.html#method-i-login","()","<p>Verifica se o usuário que está tentando acessar o sistema possui um login\nválido. Caso ele possua será …\n"],["logout","AuthenticationController","AuthenticationController.html#method-i-logout","()","<p>Realiza o logout do usuário que acessou a funcionalidade\n"],["new","Admin::BooksController","Admin/BooksController.html#method-i-new","()","<p>Cria um novo livro e passa para a tela de adicionar novo livro\n"],["new","Admin::ReviewsController","Admin/ReviewsController.html#method-i-new","()","<p>Cria uma nova resenha e passa para a tela de adicionar nova resenha\n"],["new","Admin::UsersController","Admin/UsersController.html#method-i-new","()","<p>Cria um novo usuário e passa para a tela de adicionar novo usuário\n"],["new","BooksController","BooksController.html#method-i-new","()","<p>Cria um novo livro e passa para a tela de adicionar novo livro\n"],["new","ReviewsController","ReviewsController.html#method-i-new","()","<p>Cria uma nova resenha e passa para a tela de adicionar nova resenha\n"],["new_user","AuthenticationController","AuthenticationController.html#method-i-new_user","()","<p>Cria um novo usuário baseado nos parâmetros que recuperou e  adiciona esse\nusuário no banco de dados. …\n"],["no_access","AuthenticationController","AuthenticationController.html#method-i-no_access","()","<p>Apresenta mensagem de erro para o usuáiro que tentou acessar uma tela sem\nter logado anteriormente\n"],["register","AuthenticationController","AuthenticationController.html#method-i-register","()","<p>Redireciona para a tela de registro da um novo usuário\n"],["show","Admin::BooksController","Admin/BooksController.html#method-i-show","()","<p>Recupera um livro específico e passa esse livro para a tela de detalhar\nlivro\n"],["show","Admin::ReviewsController","Admin/ReviewsController.html#method-i-show","()","<p>Recupera uma resenha específica e passa essa resenha para a tela de\ndetalhar livro\n"],["show","Admin::UsersController","Admin/UsersController.html#method-i-show","()","<p>Recupera um usuário específico e passa esse usuário para a tela de detalhar\nusuário\n"],["show","BooksController","BooksController.html#method-i-show","()","<p>Recupera um livro específico do usuário logado\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">e</span> <span class=\"ruby-identifier\">passa</span> <span class=\"ruby-identifier\">essa</span> <span class=\"ruby-identifier\">livro</span> <span class=\"ruby-identifier\">para</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">tela</span> <span class=\"ruby-identifier\">de</span> <span class=\"ruby-identifier\">detalhar</span> <span class=\"ruby-identifier\">livro</span>\n</pre>\n"],["show","ReviewsController","ReviewsController.html#method-i-show","()","<p>Recupera uma resenha específica do usuário logado e passa essa resenha para\na tela de detalhar resenha …\n"],["update","Admin::BooksController","Admin/BooksController.html#method-i-update","()","<p>Edita um livro recuperado do banco de dados atualizando seus atributos de\nacordo com os valores recebidos …\n"],["update","Admin::ReviewsController","Admin/ReviewsController.html#method-i-update","()","<p>Edita uma resenha recuperado do banco de dados atualizando seus atributos\nde acordo com os valores recebidos …\n"],["update","Admin::UsersController","Admin/UsersController.html#method-i-update","()","<p>Edita um usuário recuperado do banco de dados atualizando seus atributos de\nacordo com os valores recebidos …\n"],["update","BooksController","BooksController.html#method-i-update","()","<p>Edita um livro recuperado da estante do usuário logado atualizando seus\natributos de acordo com os valores …\n"],["update","ReviewsController","ReviewsController.html#method-i-update","()","<p>Edita uma resenha do usuário logado recuperado do banco de dados\natualizando seus atributos de acordo …\n"],["README","","README_md.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get\nthe\napplication up and ...\n"]]}}